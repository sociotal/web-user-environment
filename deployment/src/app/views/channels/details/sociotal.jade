doctype html
html(lang='en')
  head
    include ../../includes/head.jade
  body
    script(src='/js/sociotal/data.js')
    script(src='/js/sociotal/connection.js')
    script(src='/js/sociotal/subscription.js')
    script(type='text/javascript', src='/js/jquery.bootpag.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.2/Chart.min.js')

    script(type='text/javascript').
      var data = null;
      var conn = null;
      var subs = null;
      var channel = !{JSON.stringify(channel)};
      $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();

        conn = new Connection();
        conn.list(channel._id);

        data = new Data(channel._id);
        data.loadData();

        data.connectSocketIo('#{socketioUrl}');

        subs = new Subscription();

        if(channel.subscribed && channel.subscriptions.length > 0){
          subscriptionId = channel.subscriptions[0].subscriptionId;
          $('#subscription-id').val(subscriptionId);

          $('#button-sub').attr('onclick', 'subs.easyUnsubscribe()');
          $('#button-sub>i').attr('class', 'fa fa-stop');
          $('#button-sub').tooltip('hide')
                  .attr('data-original-title', 'Unsubscribe to stop gathering data')
                  .tooltip('fixTitle');
          $('#button-sub').attr("class", "btn btn-success btn-circle");
          $('#run-status').text("Active");
        } else {
          $('#button-sub').attr("class", "btn btn-circle");
          $('#run-status').text("Off");
        }

        if(channel.anomalyDetection){
          $('#anomaly-status').text("Active")
                              .attr("style", "color:#f0ad4e");
          $('#button-anomaly>i').attr('class', 'fa fa-exclamation');
          $('#button-anomaly').attr("class","btn btn-warning btn-circle");
          $('#button-anomaly').tooltip('hide')
                  .attr('data-original-title', 'Deactivate anomaly detection')
                  .tooltip('fixTitle')
        } else {
          $('#anomaly-status').text("Off")
                              .attr("style","color:black;");
          $('#button-anomaly>i').attr('class', 'fa fa-exclamation')
          $('#button-anomaly').attr("class","btn btn-circle");
          $('#button-anomaly').tooltip('hide')
                  .attr('data-original-title', 'Activate anomaly detection')
                  .tooltip('fixTitle')
        }

      });

      function deleteChannel(channelId){
        bootbox.confirm("Are you sure you want to delete this Channel?", function(result){
          if(result){
            $.ajax({
              url: "/channels/" + channelId ,
              type: 'DELETE',
              success: function(result) {
                window.location = "/channels";
              }
            });
          }
        });
      }


    #wrapper
      // Navigation
      nav.navbar.navbar-default.navbar-static-top(role='navigation', style='margin-bottom: 0')
        include ../../includes/header.jade
        include ../../includes/sidebar.jade


      // Page Content
      #page-wrapper
        .container-fluid
          .row.page-header
            .col-lg-10
              img.pull-left(src="/images/#{channel.channel_type}.png" style="height:60px; margin-right: 25px")
              span
              h1.pull-left #{channel.title}

            .col-md-2.text-right
              a(href="/channels/#{channel._id}/edit?action=edit")
                button.btn.btn-primary.btn-circle.btn-lg(type="button" title="Edit" data-toggle="tooltip" data-placement="top")
                  i.fa.fa-pencil

              span &nbsp;
              a(href="#" onclick="deleteChannel('#{channel._id}')")
                button.btn.btn-danger.btn-circle.btn-lg(type="button" title="Delete" data-toggle="tooltip" data-placement="top")
                  i.fa.fa-times

          .row
            .col-lg-12              
                p.description
                  | Below you can find all the details about this Channel: general info, produced data and the listing of all the connections to other Channels.
                  | To start gathering data, please click on the Subscribe button.


          .row
            .col-md-10
              // channel info table
              .col-md-8
                .panel.panel-default
                  .panel-heading
                    | Channel info
                  // /.panel-heading
                  .panel-body
                    .table-responsive
                      table.table
                        tbody
                          tr
                            td Author
                            td
                              a(href="/users/#{channel.user.id}") #{channel.user.name}
                          tr
                            td Type
                            td #{channel.channel_type}
                          - if(channel.channel_type == "SocIoTalChannel")
                            tr
                              td Device ID
                              td
                                a(href="/devices/#{channel.contextId}?community_name=#{channel.contextCommunity}") #{channel.contextId}
                          tr
                            td Device Community
                            td
                              - if(channel.contextCommunity != "0C")
                                a(href="/communities/show?community_name=#{channel.contextCommunity}") #{channel.contextCommunity}
                              - else
                                | General Community

                          tr
                            td Date
                            td #{formatDate(channel.createdAt, "%b %d, %Y at %I:%M %p")}

                          tr
                            td Description
                            td #{channel.description}

                          tr
                            td Tags
                            td #{channel.tags}

              - if( channel.attributes != undefined && channel.attributes.length > 0)
                // channel attributes table
                .col-md-4
                  .panel.panel-default
                    .panel-heading
                      span.pull-left
                        | Attributes
                      span.pull-right
                        button.btn.btn-primary.btn-circle.pull-right(type='button', data-toggle='modal', data-target='#modal-attributes')
                          i.fa.fa-list

                      .clearfix
                    // /.panel-heading
                    .panel-body
                      .table-responsive
                        table.table
                          tbody
                            input(type="hidden", name="attributes", value="#{channel.attributes}")
                            - each attribute in channel.attributes
                              tr
                                td #{attribute.name}

          //data section
          .row.page-header
            .col-lg-10
              h3 Data
          .row
            .col-lg-12
              p.description
                | Below is reported the data gathered by this Channel and produced by the linked Device. To receive data you must subscribe the Channel using the dedicated button. Under the hood, the system automatically detects anomalies on data. Detection is based on statistical tools to recognize an anomaly event and trigger it to a message. Anomalies notification can be switched on or off using the button on the data table.
            br

          .row
            .col-lg-4
              .col-md-4
                h5(style="color:grey;") Subscription:
              .col-md-3
                h5(id="run-status", style="color:green;")
            .col-lg-4
              .col-md-6
                h5(style="color:grey;") Anomaly Notification:
              .col-md-3
                h5(id="anomaly-status")

          br
          .row
            .col-lg-12
              .col-md-10
                .panel.panel-default
                  .panel-heading
                    .col-md-6
                      | Data (
                      span(id="data-count") 0
                      span(id="data-page")
                      |)


                    .col-md-6.text-right

                      input(type="hidden", id="context_id", value="#{channel.contextId}")
                      input(type="hidden", id="context_type", value="#{channel.contextType}")
                      input(type="hidden", id="community_name", value="#{channel.contextCommunity}")
                      input(type="hidden", id="channel_id", value="#{channel._id}")
                      input(type="hidden", id="subscription-id", value="")

                      button.btn.btn-circle(type='button' id="button-sub" onclick="subs.easySubscribe()" title="Subscribe to start gathering data" data-toggle="tooltip" data-placement="top")
                        i.fa.fa-play

                      span &nbsp;
                        button.btn.btn-circle(type='button' id="button-anomaly" onclick="data.activateAnomalyDetection('#{channel._id}')" title="Activate anomaly detection" data-toggle="tooltip" data-placement="top")
                          i.fa.fa-exclamation

                      span &nbsp;
                      button.btn.btn-danger.btn-circle(type='button' onclick="data.clearData('#{channel._id}')" title="Clear data" data-toggle="tooltip" data-placement="top")
                        i.fa.fa-times

                    .clearfix
                  .panel-body
                    .table-responsive(id="data-container")
                      input(type="hidden", id="data-content", value="")
                      table.table.table-striped.table-bordered.table-hover(id="data-table")
                        thead
                          tr
                            //th #
                            th Date
                            th Type
                            th Key
                            th Value
                            //th Unit

                        tbody(id="data-body")

                      nav.pull-right
                        ul(id="paginator").pagination



                    p(id="data-empty").description
                      | No data, yet.
                      - if(channel.channel_type == "SocIoTalChannel")
                        |  To get data please &nbsp;
                        a(href="#" title="Subscribe to start gathering data" data-toggle="tooltip" data-placement="top" onclick="subs.easySubscribe()") subscribe

          ////chart section
          //.row.page-header
          //  .col-lg-10
          //    h3 Chart
          //.row
          //  .col-lg-12
          //    p.description
          //      | Chart of the Channel data.
          //br
          //.row
          //  //ul.nav.nav-tabs(role='tablist')
          //  //  li.active
          //  //    a#tab1(href='#chart1', role='tab', data-toggle='tab') Chart 1
          //  //  li
          //  //    a#tab2(href='#chart2', role='tab', data-toggle='tab') Chart 2
          //  //.tab-content
          //  //  #chart1.tab-pane.active
          //  //    canvas#myChart1(width='400', height='400')
          //  //  #chart2.tab-pane
          //  //    canvas#myChart2(width='400', height='400')
          //
          //
          //
          //  ul.nav.nav-tabs(role='tablist')
          //    li.active
          //      a#tab1(href='#chart1', role='tab', data-toggle='tab') Chart 1
          //    - each attribute in channel.attributes
          //      li
          //        a#tab1(href=attribute.name+'_chart', role='tab', data-toggle='tab') #{attribute.name}
          //  .tab-content
          //    #chart1.tab-pane.active
          //      canvas#myChart2(width='400', height='100')
          //    - each attribute in channel.attributes
          //      div(id= attribute.name+'_chart').tab-pane
          //        canvas(id= attribute.name+'_canvas',  width='400', height='100')
          //
          //    //#chart1.tab-pane.active
          //    //  canvas#myChart1(width='400', height='100')
          //    //#chart2.tab-pane
          //    //  canvas#myChart2(width='400', height='100')


          //anomaly section
          .row.page-header
                .col-lg-10
                    h3 Anomaly Detection
          .row
                .col-lg-12
                    p.description
                        | The anomaly detector is based on statistical tools to recognize an anomaly event and trigger it to a message.
                        | It can be generated automatically or triggered by the user.
          br
          .row
            .col-lg-12
                .col-md-10
                    .panel.panel-default(id="anomaly-panel", style="display: block;")
                        // display: none;
                        .panel-heading
                            | Anomaly detected in
                        .col-md-6.text-right
                        .panel-body
                            .table-responsive(id="anomaly-container")
                                input(type="hidden", id="anomaly-content", value="")
                                table.table.table-striped.table-bordered.table-hover(id="anomaly-table")
                                    thead
                                        tr
                                            //th #
                                            th Date
                                            th Type
                                            th Key
                                            th Value
                                            //th Unit

                                    tbody(id="anomaly-body")

                                nav.pull-right
                                    ul(id="paginator-anomaly").pagination



            //Connections
          .row.page-header
            .col-lg-10
              h3 Connections

          .row
            .col-lg-12
              p.description
                | A Connection is a logical flow between this Channel and a connected one. Connection behaviour is specified by a
                br
                |<i>WHEN [condition] DO [an action on the connected Channel]</i> rule.
                br
                | Thus, in a Connection, an action is performed on a connected Channel only when a condition is satisfied on data produced by this Channel.
          br
          .row
            .col-lg-12
              .col-md-10
                .panel.panel-default
                  .panel-heading
                    .col-lg-10
                      | This Channel is connected to...
                    .col-md-2.text-right
                      button.btn.btn-primary.btn-circle(type='button' title="Create a new Connection to another Channel" data-toggle="tooltip" data-placement="top" onclick="openConnectionModal('new')")
                        i.fa.fa-plus
                    .clearfix
                  .panel-body()
                    div(id="connections-list")
                    input(type="hidden" id="connections" value="")
                    p(id="connections-empty").description= "This Channel doesn't have connections, yet."
                      - if(channel.channel_type == "SocIoTalChannel")
                        |  Create your first &nbsp;
                        a(href="#" title="New connection" data-toggle="tooltip" data-placement="top" onclick="openConnectionModal('new')") Connection


            .row
              .col-lg-12
                br

    include ../../includes/footer.jade





script(type='text/x-jquery-tmpl', id='data-template')
    tr(id='${_id}')
      //td
        h5 ${index}
      td(width="25%", padding="2")
        h5 ${date_created}
      td
        h5 ${request_type}
      td
        h5 ${data_type}
      td
        h5 ${value}


script(type='text/x-jquery-tmpl', id='data-template-anomaly')
  tr(id='${_id}')
    td(width="25%", padding="2", bgcolor = '#F4CB95')
      h5 ${date_created}
    td(bgcolor = '#F4CB95')
      h5 ${request_type}
    td(bgcolor = '#F4CB95')
      h5 ${data_type}
    td(bgcolor = '#F4CB95')
      h5 ${value}


script(type='text/x-jquery-tmpl', id='connection-template')
  input(type="hidden" id="connection-${connection._id}" value="${JSON.stringify(connection)}")
  .col-lg-5.col-md-6
    .panel.panel-primary
      .panel-heading
        .row
          .col-xs-3
            //i.fa.fa-terminal.fa-4x
            img(id="connection_icon" src="/images/Connection.png" style="width:86px;")
          .col-xs-9.text-right
            div
              h5
                a.conn-link(href="/channels/${connection.action.targetChannelId}")  ${connection.action.targetChannelName}
            div ${connection.lab1}
            div ${connection.lab2}
      a(href='#')
        .panel-footer
          span.pull-left
            a(href="#" onclick="conn.edit('${connection._id}')") View Details
          span.pull-right
            a(href="#" role='button' title="Delete connection" data-toggle="tooltip" data-placement="top" onclick="conn.delete('${connection._id}')")
              i.fa.fa-times(style="color: #d43f3a")
          .clearfix




div.modal.fade(id="modal-connection", tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
  .modal-dialog
    .modal-content
      .modal-header
        button.btn.close(type="submit", data-dismiss="modal" aria-hidden="true") &times;</button>
        h4.modal-title(id="myModalLabel") #{channel.title} connection...

        input(type="hidden", id="modal-mode", value="new")
        input(type="hidden", id="modal-connection-id", value="new")
        input(type="hidden", name="_csrf", id="_csrf", value="#{csrf_token}")
        input(type='hidden', name='attributes', id="attributes" value="#{JSON.stringify(channel.attributes)}")
        input(type='hidden', name='channelId', id="channelId" value="#{channel._id}")
        input(type='hidden', name='channelType', id="channelType" value="#{channel.channel_type}")
        input(type='hidden', name='targetChannelId', id="targetChannelId" value="")
        input(type='hidden', name='targetChannelName', id="targetChannelName" value="")
        input(type='hidden', name='targetChannels', id="targetChannels" value="#{JSON.stringify(actionChannels)}")

      .modal-body

        .row
          .col-md-10
              h1 WHEN
              h5 select an attribute

        .row
          .col-md-6
            select.form-control(id="attribute-name", onchange="loadTriggers(this.value)")
              option(value="") -----
              - if( channel.attributes != undefined)
                - each attr in channel.attributes
                  option
                    | #{attr.name}


        .row(id="triggers-row", style="display:none; margin-top:20px")
          .col-md-6
            input(type="hidden", id="channel-triggers", value="#{JSON.stringify(channelTriggers)}")
            select.form-control(id="trigger-name", onchange="checkValueType(this.value)")


          .col-md-3
            input.form-control(id="trigger-value" type="text" placeholder="Enter the value here...")

        .row
          .col-md-10
              h1 DO
              h5 select a channel
        .row
          .col-md-6
            select.form-control(id="target-channels" onchange="showChannelActions(this.value)")
              option(value="") -----
              - each ch in actionChannels
                  - if(ch.title != channel.title)
                      option(value="#{ch.id}")= ch.title
        .row
          .col-md-10
            p= ""

        .row(id="action-row" style="display:none")
          .col-md-6
            input(type="hidden", id="action-channels")
            select.form-control(id="action-name" onchange="changeDefautlValue(this.value, 'action')")
              option(value="-none") select an action...

          .col-md-6
            .col-xs-5
              textarea.form-control(id="action-value" type="text" placeholder="Enter the message here..." style="margin: 0px -152.922px 0px 0px; width: 234px; height: 82px;")


      .modal-footer
        button.btn.btn-default(data-dismiss="modal") Close
        button.btn.btn-primary(onclick="conn.save()") Save



div.modal.fade.bs-example-modal-lg(id="modal-attributes", tabindex="-1", role="dialog", aria-hidden="true")
  .modal-dialog.modal-lg
    .modal-content
      .modal-header
        button.btn.close(type="submit", data-dismiss="modal" aria-hidden="true") &times;</button>
        h4.modal-title(id="") Attributes

      .modal-body

        - if(channel.attributes != undefined)
          - var attributes = channel.attributes;
          - each attribute in attributes
            - var metadatas = attribute.metadatas;

            hr

            p
              b Name: &nbsp;
              | #{attribute.name}
            p
              b Type: &nbsp;
              a(href="#{attribute.type}") #{attribute.type}

            .table-responsive
              table.table
                thead
                  th Name
                  th Value
                  th Type
                  tbody
                    - each metadata in metadatas
                      tr
                        td #{metadata.name}
                        td #{metadata.value}
                        td
                          a(href="#{metadata.type}") #{metadata.type}




      .modal-footer
        button.btn.btn-default(data-dismiss="modal") Close

